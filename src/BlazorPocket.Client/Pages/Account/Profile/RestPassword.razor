@using System.ComponentModel.DataAnnotations
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <div class="d-flex flex-column gap-2">
        <MudText Typo="Typo.h4">Set new password</MudText>
        <MudTextField Label="User name" @bind-Value="model.Username" For="@(() => model.Username)" ShrinkLabel="true" ReadOnly></MudTextField>
        <MudTextField InputType="InputType.Password" Label="New password" @bind-Value="model.Password" For="@(() => model.Password)" ShrinkLabel="true"></MudTextField>
        <MudTextField InputType="InputType.Password" Label="Confirm password" @bind-Value="model.PasswordConfirm" For="@(() => model.PasswordConfirm)" ShrinkLabel="true"></MudTextField>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Set new password</MudButton>
    </div>
</EditForm>

@code {
    private ChangePasswordModel model = new();

    private void OnValidSubmit(EditContext context)
    {

        StateHasChanged();
    }
    public class ChangePasswordModel
    {
        [Required]
        public string? Id { get; set; }
        [Required]
        public string? Username { get; set; }
        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 6 characters long.", MinimumLength = 6)]
        [RegularExpression(@"^(?=.*[A-Za-z])(?=.*\d)(?=.*[\W_]).{6,}$", ErrorMessage = "Password must be at least 6 characters long and contain at least one letter, one number, and one special character.")]
        public string? Password { get; set; }
        [Required]
        [Compare(nameof(Password))]
        public string? PasswordConfirm { get; set; }

    }
}
