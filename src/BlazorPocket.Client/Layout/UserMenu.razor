@using BlazorPocket.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@using PocketBaseClient.BlazorPocket.Models
@using pocketbase_csharp_sdk.Models.Auth
@{
    var userModel = (User)PocketbaseClient.Auth.AuthStore.Model;
}
<MudMenu Class="ml-1" PositionAtCursor="false" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.BottomLeft">
    <ActivatorContent>
        <MudStack Row="true" AlignItems="AlignItems.Center">
            @if (userModel?.Avatar is null)
            {
                <MudAvatar Size="Size.Medium" Square="true">A</MudAvatar>
            }
            else
            {
                <MudAvatar Size="Size.Medium" Square="true">
                    <MudImage Src="@GetAvatarUrl(userModel)"></MudImage>
                </MudAvatar>
            }
            <MudStack Justify="Justify.Center" Spacing="0">
                <MudText Typo="Typo.body2">@(string.IsNullOrEmpty(userModel?.Name) ? userModel?.Username : userModel?.Name)</MudText>
                <MudText Typo="Typo.body2" Class="mud-text-secondary">@userModel?.Email</MudText>
            </MudStack>
        </MudStack>
    </ActivatorContent>
    <ChildContent>
        <MudMenuItem>
            <div class="d-flex align-center">
                <MudIcon Class="mr-1" Size="Size.Small"
                         Icon="@Icons.Material.Filled.Person" />
                <MudText Align="Align.Center">Profile</MudText>
            </div>
        </MudMenuItem>
        <MudMenuItem>
            <div class="d-flex align-center">
                <MudIcon Class="mr-1" Size="Size.Small"
                         Icon="@Icons.Material.Filled.Settings" />
                <MudText Align="Align.Center">Settings</MudText>
            </div>
        </MudMenuItem>
        <MudMenuItem OnClick="OnSignOut">
            <div class="d-flex align-center">
                <MudIcon Class="mr-1" Size="Size.Small"
                         Icon="@Icons.Material.Filled.Logout" />
                <MudText Align="Align.Center">Logout</MudText>
            </div>
        </MudMenuItem>

    </ChildContent>
</MudMenu>


@code {
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; } = null!;
    private string GetAvatarUrl(User usermodel)
    {
        return PocketbaseClient.AppUrl + "/api/files/" + usermodel.CollectionId + "/" + usermodel.Id + "/" + usermodel.Avatar.FileName;
    }

    private void OnSignOut()
    {
        ((PocketBaseAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsLoggedOut();
    }
}
